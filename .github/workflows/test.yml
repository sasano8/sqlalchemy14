name: test

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
        # os: [ubuntu-latest, macOS-latest, windows-latest]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Add path for Poetry
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Load cached venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install

      - name: Run Tests
        run: poetry run pytest --env=local -v tests

      - name: Run Integrate Tests
        run: poetry run pytest --env=docker -v tests
        env:
          POSTGRES_HOST: 127.0.0.1
          # POSTGRES_DB: postgres
          # POSTGRES_USER: postgres
          # POSTGRES_PASSWORD: postgres

      - name: Check code style with Black
        run: poetry run black --check --diff .
